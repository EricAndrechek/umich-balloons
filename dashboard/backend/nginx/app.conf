
upstream node_app {
    # Least connections is often good for long-lived connections like WebSockets
    # least_conn;
    server websocket-broadcaster:3000;
}

upstream fastapi_app {
    server api:8000;
}

server {
    listen 80;
    server_name _; # Listen on all hostnames

    # Basic logging
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # --- Routing for FastAPI ---
    location /api/ {
        # Strip /api prefix if your FastAPI app doesn't expect it
        # rewrite ^/api/(.*)$ /$1 break; # Uncomment if needed

        proxy_pass http://fastapi_app; # Route to the fastapi upstream

        proxy_http_version 1.1;
        # Headers needed for general proxying
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_set_header Connection ""; # Uncomment if issues with keep-alive
    }

    # --- Routing for Node.js WebSocket ---
    location /ws {
        proxy_pass http://node_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # proxy_read_timeout 7d; # Consider longer timeouts if needed
    }

    # --- Default routing for Node.js HTTP (catches /update, /health, /) ---
    # Make this specific if needed, or ensure /api doesn't overlap
    location / {
        # Ensure requests not matching /api/ or /ws go to node_app
        # Example: Explicitly route /update
        # location = /update {
        #    proxy_pass http://node_app;
        #    ... proxy headers ...
        # }
        # Example: Explicitly route /health
        # location = /health {
        #    proxy_pass http://node_app;
        #    ... proxy headers ...
        # }

        # Fallback to node_app for anything else (like the Node /health)
        proxy_pass http://node_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}